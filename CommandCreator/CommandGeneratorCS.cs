// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace CommandCreator
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class CommandGeneratorCS : CommandGeneratorCSBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write(@"/****************************************************************************************
*
* This code was generated by the Command Creator tool for the ChainsAPM project. 
* If manual changes are made to the code they could be lost.
*
****************************************************************************************/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ChainsAPM.Commands.");
            
            #line 18 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    public class ");
            
            #line 20 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.ClassName));
            
            #line default
            #line hidden
            this.Write(" : Interfaces.ICommand<byte>\r\n    {\r\n\r\n         private Helpers.Fnv1a64 hashhelpe" +
                    "r;\r\n\r\n         public DateTime TimeStamp { get; set; }\r\n");
            
            #line 26 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 foreach (var enumn in this.EnumerationList)
{ 
            
            #line default
            #line hidden
            
            #line 28 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (enumn.Flags){
            
            #line default
            #line hidden
            this.Write("        [Flags]\r\n");
            
            #line 30 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
}
            
            #line default
            #line hidden
            this.Write("        public enum ");
            
            #line 31 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(enumn.EnumerationName));
            
            #line default
            #line hidden
            this.Write("\r\n        {\r\n");
            
            #line 33 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 foreach (var enumItem in enumn.Items)
{ 
            
            #line default
            #line hidden
            
            #line 35 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (enumn.Items.Last().Name != enumItem.Name)
{ 
            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 37 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(enumItem.Name));
            
            #line default
            #line hidden
            this.Write(" = 0x");
            
            #line 37 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(enumItem.Value.ToString("x8")));
            
            #line default
            #line hidden
            this.Write(",\r\n");
            
            #line 38 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"

} else { 
            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 40 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(enumItem.Name));
            
            #line default
            #line hidden
            this.Write(" = 0x");
            
            #line 40 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(enumItem.Value.ToString("x8")));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 41 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            
            #line 42 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write("        }\r\n");
            
            #line 44 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 46 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 foreach (var cpItem in this.ClassProperties)
{ 
            
            #line default
            #line hidden
            this.Write("        public ");
            
            #line 48 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (TypeMapping.ContainsKey(cpItem.TypeName)) { if(cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write("List<");
            
            #line 48 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
}
            
            #line default
            #line hidden
            
            #line 48 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TypeMapping[cpItem.TypeName].ToString()));
            
            #line default
            #line hidden
            
            #line 48 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
if(cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write(">");
            
            #line 48 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
}
            
            #line default
            #line hidden
            
            #line 48 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
if(cpItem.IsArray == true){
            
            #line default
            #line hidden
            this.Write("[]");
            
            #line 48 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
}
            
            #line default
            #line hidden
            
            #line 48 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else { if(cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write("List<");
            
            #line 48 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
}
            
            #line default
            #line hidden
            
            #line 48 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.TypeName.ToString()));
            
            #line default
            #line hidden
            
            #line 48 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
if(cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write(">");
            
            #line 48 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
}
            
            #line default
            #line hidden
            
            #line 48 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
if(cpItem.IsArray == true){
            
            #line default
            #line hidden
            this.Write("[]");
            
            #line 48 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
}
            
            #line default
            #line hidden
            
            #line 48 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
}
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 48 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(" { get; set; }\r\n");
            
            #line 49 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n        public ");
            
            #line 51 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.ClassName));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            hashhelper = new Helpers.Fnv1a64();\r\n        }\r\n\r\n    " +
                    "    public ");
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.ClassName));
            
            #line default
            #line hidden
            this.Write("(System.Int64 timestamp, ");
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 foreach (var cpItem in this.ClassProperties) { if (TypeMapping.ContainsKey(cpItem.TypeName)) { if(cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write("List<");
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
}
            
            #line default
            #line hidden
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TypeMapping[cpItem.TypeName].ToString()));
            
            #line default
            #line hidden
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
if(cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write(">");
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
}
            
            #line default
            #line hidden
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
if(cpItem.IsArray == true){
            
            #line default
            #line hidden
            this.Write("[]");
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
}
            
            #line default
            #line hidden
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else { if(cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write("List<");
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
}
            
            #line default
            #line hidden
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.TypeName.ToString()));
            
            #line default
            #line hidden
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
if(cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write(">");
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
}
            
            #line default
            #line hidden
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
if(cpItem.IsArray == true){
            
            #line default
            #line hidden
            this.Write("[]");
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
}
            
            #line default
            #line hidden
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
}
            
            #line default
            #line hidden
            this.Write(" _");
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name.ToLower()));
            
            #line default
            #line hidden
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
  if (this.ClassProperties.Last().Name != cpItem.Name) { 
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 56 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else { } } 
            
            #line default
            #line hidden
            this.Write(") : this()\r\n        {\r\n            TimeStamp = timestamp == 0 ? DateTime.Now : Da" +
                    "teTime.FromFileTimeUtc(timestamp);\r\n");
            
            #line 59 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 foreach (var cpItem in this.ClassProperties)
{ 
            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 61 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(" = _");
            
            #line 61 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name.ToLower()));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 62 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write("        }\r\n\r\n        public string Name\r\n        {\r\n            get { return \"");
            
            #line 67 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Name));
            
            #line default
            #line hidden
            this.Write("\"; }\r\n        }\r\n        public ushort Code\r\n        {\r\n            get { return " +
                    "0x");
            
            #line 71 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Code.ToString("x4")));
            
            #line default
            #line hidden
            this.Write("; }\r\n        }\r\n        public string Description\r\n        {\r\n            get { r" +
                    "eturn \"");
            
            #line 75 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.Description));
            
            #line default
            #line hidden
            this.Write("\"; }\r\n        }\r\n        public Type CommandType\r\n        {\r\n            get { re" +
                    "turn typeof(");
            
            #line 79 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.CommandType.ToString()));
            
            #line default
            #line hidden
            this.Write(@"); }
        }
        public Interfaces.ICommand<byte> Decode(ArraySegment<byte> input)
        {

            if (input.Count != 0)
            {
                Helpers.ArraySegmentStream segstream = new Helpers.ArraySegmentStream(input);
                int size = segstream.GetInt32();
                if (input.Count == size)
                {
                    short code = segstream.GetInt16();
                    if (code == Code)
                    {
                    var timestamp = segstream.GetInt64();
");
            
            #line 94 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 foreach (var cpItem in this.ClassProperties) { 
string typeName = "";
if (TypeMapping.ContainsKey(cpItem.TypeName)) { typeName = TypeMapping[cpItem.TypeName].ToString(); } else { typeName = cpItem.TypeName.ToString(); }
if (cpItem.IsList == true | cpItem.IsArray == true) { 
            
            #line default
            #line hidden
            this.Write("\r\n                    var numberOf");
            
            #line 99 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(" = segstream.GetInt32();\r\n  ");
            
            #line 100 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write("                    var listOf");
            
            #line 101 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(" = new List<");
            
            #line 101 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(typeName));
            
            #line default
            #line hidden
            this.Write(">();\r\n  ");
            
            #line 102 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("                    var arrayOf");
            
            #line 103 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 103 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(typeName));
            
            #line default
            #line hidden
            this.Write("[numberOf");
            
            #line 103 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write("];\r\n  ");
            
            #line 104 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write("                    for (int i");
            
            #line 105 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(" = 0; i");
            
            #line 105 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(" < numberOf");
            
            #line 105 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write("; i");
            
            #line 105 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write("++)\r\n                    {\r\n");
            
            #line 107 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            
            #line 108 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (typeName == typeof(string).FullName) { 
            
            #line default
            #line hidden
            this.Write("                    var stringlen");
            
            #line 109 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(" = segstream.GetInt32();\r\n                    var decode");
            
            #line 110 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write("Hash = segstream.GetInt64();\r\n                    var decode");
            
            #line 111 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(" = segstream.GetUnicode(stringlen");
            
            #line 111 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(" + 1);\r\n\r\n");
            
            #line 113 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else if (typeName == typeof(Int32).FullName) { 
            
            #line default
            #line hidden
            this.Write("                    var decode");
            
            #line 114 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(" = segstream.GetInt32();\r\n\r\n");
            
            #line 116 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else if (typeName == typeof(Int16).FullName) { 
            
            #line default
            #line hidden
            this.Write("                    var decode");
            
            #line 117 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(" = segstream.GetInt16();\r\n\r\n");
            
            #line 119 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else if (typeName == typeof(Int64).FullName) { 
            
            #line default
            #line hidden
            this.Write("                    var decode");
            
            #line 120 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(" = segstream.GetInt64();\r\n\r\n");
            
            #line 122 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else if (typeName == typeof(byte).FullName) { 
            
            #line default
            #line hidden
            this.Write("                    var decode");
            
            #line 123 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(" = segstream.GetByte();\r\n\r\n");
            
            #line 125 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("                    var decode");
            
            #line 126 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 126 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(typeName));
            
            #line default
            #line hidden
            this.Write(")segstream.GetInt32();\r\n\r\n");
            
            #line 128 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            
            #line 129 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write("                    listOf");
            
            #line 130 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(".Add(decode");
            
            #line 130 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n                    }\r\n");
            
            #line 132 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else if (cpItem.IsArray == true) { 
            
            #line default
            #line hidden
            this.Write("                    arrayOf");
            
            #line 133 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write("[i");
            
            #line 133 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write("] = decode");
            
            #line 133 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n                    }\r\n");
            
            #line 135 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write("     \r\n");
            
            #line 136 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"                       
                    var term = segstream.GetInt16();

                    if (term != 0)
                    {
                        throw new System.Runtime.Serialization.SerializationException(""Terminator is a non zero value. Please check the incoming byte stream for possible errors."");
                    }
                    return new ");
            
            #line 143 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.ClassName));
            
            #line default
            #line hidden
            this.Write("(timestamp, ");
            
            #line 143 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 foreach (var cpItem in this.ClassProperties) { if(cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write("listOf");
            
            #line 143 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else if (cpItem.IsArray == true) { 
            
            #line default
            #line hidden
            this.Write("arrayOf");
            
            #line 143 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("decode");
            
            #line 143 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            
            #line 143 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            
            #line 143 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (this.ClassProperties.Last().Name != cpItem.Name) { 
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 143 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else { } } 
            
            #line default
            #line hidden
            this.Write(@");
                    }
                    else
                    {
                        throw new System.Runtime.Serialization.SerializationException(""Invalid command code detected. Please check the incoming byte stream for possible errors."");
                    }
                }
                else
                {
                    throw new System.Runtime.Serialization.SerializationException(""Size of message does not match size of byte stream. Please check the incoming byte stream for possible errors."");
                }
            }
            else
            {
                throw new System.Runtime.Serialization.SerializationException(""Size of message is zero. Please check the incoming byte stream for possible errors. "");
            }
        }
        public byte[] Encode()
        {
            int byteSize = 0;

             byteSize += sizeof (Int32); // Length Of Command
             byteSize += sizeof (Int16); // Length Of Code
             byteSize += sizeof (Int64); // Length Of Timestamp

");
            
            #line 168 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 foreach (var cpItem in this.ClassProperties) { 
string typeName = "";			 
if (TypeMapping.ContainsKey(cpItem.TypeName)) { typeName = TypeMapping[cpItem.TypeName].ToString(); } else { typeName = cpItem.TypeName.ToString(); }
if (cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write("            byteSize += 4; // Length of Array\r\n");
            
            #line 173 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            
            #line 174 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (typeName == typeof(string).FullName) { 
            
            #line default
            #line hidden
            
            #line 175 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write("            foreach (var sItem in ");
            
            #line 176 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(@")
            {
               var sBufferListOfMethods_item = System.Text.UnicodeEncoding.Unicode.GetBytes (sItem);
               byteSize += sizeof(System.Int32); // Length Bytes
               byteSize += sizeof(System.Int64); // Hash Bytes
               byteSize += sBufferListOfMethods_item.Length; // StringLength Bytes
               byteSize += sizeof(System.Int16); // Zero Terminated String
            }
");
            
            #line 184 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("            byteSize += sizeof(System.Int32); // Length Bytes\r\n            byteSi" +
                    "ze += sizeof(System.Int64); // Hash Bytes\r\n            byteSize += ");
            
            #line 187 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(".Length; // StringLength Bytes\r\n            byteSize += sizeof(System.Int16); // " +
                    "Zero Terminated String\r\n");
            
            #line 189 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            
            #line 190 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else if (typeName == typeof(Int32).FullName) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 191 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsArray == true | cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write(" byteSize += sizeof (Int32);");
            
            #line 191 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n            byteSize += sizeof(");
            
            #line 193 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(typeName));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 193 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write(" * ");
            
            #line 193 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(".Count");
            
            #line 193 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            
            #line 193 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsArray == true) { 
            
            #line default
            #line hidden
            this.Write(" * ");
            
            #line 193 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(".Length");
            
            #line 193 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 194 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else if (typeName == typeof(Int16).FullName) { 
            
            #line default
            #line hidden
            this.Write("\t        ");
            
            #line 195 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsArray == true | cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write(" byteSize += sizeof (Int32);");
            
            #line 195 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n            byteSize += sizeof(");
            
            #line 197 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(typeName));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 197 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write(" * ");
            
            #line 197 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(".Count");
            
            #line 197 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            
            #line 197 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsArray == true) { 
            
            #line default
            #line hidden
            this.Write(" * ");
            
            #line 197 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(".Length");
            
            #line 197 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 198 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else if (typeName == typeof(Int64).FullName) { 
            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 199 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsArray == true | cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write(" byteSize += sizeof (Int32);");
            
            #line 199 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n            byteSize += sizeof(");
            
            #line 201 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(typeName));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 201 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write(" * ");
            
            #line 201 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(".Count");
            
            #line 201 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            
            #line 201 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsArray == true) { 
            
            #line default
            #line hidden
            this.Write(" * ");
            
            #line 201 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(".Length");
            
            #line 201 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 202 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else if (typeName == typeof(byte).FullName) { 
            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 203 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsArray == true | cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write(" byteSize += sizeof (Int32);");
            
            #line 203 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n            byteSize += sizeof(");
            
            #line 205 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(typeName));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 205 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write(" * ");
            
            #line 205 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(".Count");
            
            #line 205 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            
            #line 205 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsArray == true) { 
            
            #line default
            #line hidden
            this.Write(" * ");
            
            #line 205 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(".Length");
            
            #line 205 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 206 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 207 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsArray == true | cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write(" byteSize += sizeof (Int32);");
            
            #line 207 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n            byteSize += sizeof(Int32)");
            
            #line 209 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write(" * ");
            
            #line 209 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(".Count");
            
            #line 209 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            
            #line 209 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsArray == true) { 
            
            #line default
            #line hidden
            this.Write(" * ");
            
            #line 209 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(".Length");
            
            #line 209 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 210 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            
            #line 211 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"            byteSize += sizeof (short); // Length Of Terminator
            var buffer = new List<byte>(byteSize);
            buffer.AddRange(BitConverter.GetBytes(byteSize)); // 4 bytes for size, 2 byte for code, 8 bytes for data, 8 bytes for data, 8 bytes for TS, 2 bytes for term
            buffer.AddRange(BitConverter.GetBytes(Code));
            buffer.AddRange(BitConverter.GetBytes(TimeStamp.ToFileTimeUtc()));
");
            
            #line 217 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 foreach (var cpItem in this.ClassProperties) {
string typeName = "";
if (TypeMapping.ContainsKey(cpItem.TypeName)) { typeName = TypeMapping[cpItem.TypeName].ToString(); } else { typeName = cpItem.TypeName.ToString(); }
if ((cpItem.IsList == true | cpItem.IsArray == true) && typeName != typeof(byte).FullName) { 
            
            #line default
            #line hidden
            
            #line 221 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsList == true) { 
            
            #line default
            #line hidden
            this.Write("            buffer.AddRange(BitConverter.GetBytes(");
            
            #line 222 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(".Count)); // Count of List\r\n");
            
            #line 223 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("            buffer.AddRange(BitConverter.GetBytes(");
            
            #line 224 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(".Length)); // Length of Array\r\n");
            
            #line 225 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write("            foreach (var ");
            
            #line 226 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write("_item in ");
            
            #line 226 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(")\r\n            {\r\n");
            
            #line 228 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (typeName == typeof(string).FullName) { 
            
            #line default
            #line hidden
            this.Write("                var sBuffer");
            
            #line 229 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write("_item = System.Text.UnicodeEncoding.Unicode.GetBytes(");
            
            #line 229 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write("_item);\r\n                buffer.AddRange(BitConverter.GetBytes(");
            
            #line 230 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write("_item.Length + 1));\r\n                buffer.AddRange(hashhelper.ComputeHash(sBuff" +
                    "er");
            
            #line 231 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write("_item));\r\n                buffer.AddRange(sBuffer");
            
            #line 232 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write("_item);\r\n                buffer.AddRange(BitConverter.GetBytes((short)0));\r\n");
            
            #line 234 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else if (typeName == typeof(Int32).FullName) { 
            
            #line default
            #line hidden
            this.Write("            buffer.AddRange(BitConverter.GetBytes(");
            
            #line 235 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write("_item)); \r\n");
            
            #line 236 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else if (typeName == typeof(Int16).FullName) { 
            
            #line default
            #line hidden
            this.Write("            buffer.AddRange(BitConverter.GetBytes(");
            
            #line 237 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write("_item)); \r\n");
            
            #line 238 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else if (typeName == typeof(Int64).FullName) { 
            
            #line default
            #line hidden
            this.Write("            buffer.AddRange(BitConverter.GetBytes(");
            
            #line 239 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write("_item)); \r\n");
            
            #line 240 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else if (typeName == typeof(byte).FullName) { 
            
            #line default
            #line hidden
            
            #line 241 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("                buffer.AddRange(BitConverter.GetBytes((int)");
            
            #line 242 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write("_item)); \r\n");
            
            #line 243 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write("            }\r\n\r\n");
            
            #line 246 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 247 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (typeName == typeof(string).FullName) { 
            
            #line default
            #line hidden
            this.Write("            var sBuffer");
            
            #line 248 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(" = System.Text.UnicodeEncoding.Unicode.GetBytes(");
            
            #line 248 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n            buffer.AddRange(BitConverter.GetBytes(");
            
            #line 249 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(".Length + 1));\r\n            buffer.AddRange(hashhelper.ComputeHash(sBuffer");
            
            #line 250 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write("));\r\n            buffer.AddRange(sBuffer");
            
            #line 251 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n            buffer.AddRange(BitConverter.GetBytes((short)0));\r\n");
            
            #line 253 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else if (typeName == typeof(Int32).FullName) { 
            
            #line default
            #line hidden
            this.Write("            buffer.AddRange(BitConverter.GetBytes(");
            
            #line 254 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(")); \r\n");
            
            #line 255 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else if (typeName == typeof(Int16).FullName) { 
            
            #line default
            #line hidden
            this.Write("            buffer.AddRange(BitConverter.GetBytes(");
            
            #line 256 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(")); \r\n");
            
            #line 257 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else if (typeName == typeof(Int64).FullName) { 
            
            #line default
            #line hidden
            this.Write("            buffer.AddRange(BitConverter.GetBytes(");
            
            #line 258 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(")); \r\n");
            
            #line 259 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else if (typeName == typeof(byte).FullName) { 
            
            #line default
            #line hidden
            
            #line 260 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 if (cpItem.IsArray == true) { 
            
            #line default
            #line hidden
            this.Write("            buffer.AddRange(BitConverter.GetBytes(");
            
            #line 261 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(".Length)); // Length of Array\r\n            buffer.AddRange(");
            
            #line 262 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(");  // Add raw bytes to stream\r\n");
            
            #line 263 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("            buffer.AddRange(BitConverter.GetBytes(");
            
            #line 264 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(")); \r\n");
            
            #line 265 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write("            \r\n");
            
            #line 267 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("            buffer.AddRange(BitConverter.GetBytes((int)");
            
            #line 268 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cpItem.Name));
            
            #line default
            #line hidden
            this.Write(")); \r\n");
            
            #line 269 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 271 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            
            #line 272 "C:\Users\James\Source\Repos\chainsapm\CommandCreator\CommandGeneratorCS.tt"
 } 
            
            #line default
            #line hidden
            this.Write("            buffer.AddRange(BitConverter.GetBytes((short)0));\r\n            return" +
                    " buffer.ToArray();\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public class CommandGeneratorCSBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
