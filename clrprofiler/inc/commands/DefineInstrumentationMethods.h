   
 
 
/****************************************************************************************
*
* This code was generated by the Command Creator tool for the ChainsAPM project. 
* If manual changes are made to the code they could be lost.
* 
****************************************************************************************/ 
#pragma once
#include "ICommand.h"

namespace Commands  
{
    class DefineInstrumentationMethods :
        public virtual ICommand
    {


    public:
    
        DefineInstrumentationMethods(__int64 timestamp, std::wstring assemblyname, std::wstring typenamestring, std::wstring methodname, std::wstring injectionmethodname, std::vector<char> injectionmethodilbytes); 
        ~DefineInstrumentationMethods();
        virtual std::shared_ptr<std::vector<char>> Encode();
        virtual std::shared_ptr<ICommand> Decode(std::shared_ptr<std::vector<char>> &data);  
        virtual std::wstring Name();
        virtual std::wstring Description();
        virtual short Code() { return code; }
        std::wstring AssemblyName;
        std::wstring TypeNameString;
        std::wstring MethodName;
        std::wstring InjectionMethodName;
        std::vector<char> InjectionMethodILBytes;
      private:
        __int64 timestamp; // Always use a 64bit so the message doesn't change
        std::shared_ptr<std::vector<char>> internalvector;
        bool hasEncoded;
        short code;
    };

}
